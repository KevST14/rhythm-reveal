{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/server/middleware-webpack.ts"],"sourcesContent":["import { constants as FS, promises as fs } from 'fs'\nimport path from 'path'\nimport url from 'url'\nimport { SourceMapConsumer } from 'next/dist/compiled/source-map08'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport { getSourceMapFromFile } from '../internal/helpers/get-source-map-from-file'\nimport { launchEditor } from '../internal/helpers/launchEditor'\nimport {\n  badRequest,\n  getOriginalCodeFrame,\n  internalServerError,\n  json,\n  noContent,\n  type OriginalStackFrameResponse,\n} from './shared'\nexport { getServerError } from '../internal/helpers/node-stack-frames'\nexport { parseStack } from '../internal/helpers/parse-stack'\nexport { getSourceMapFromFile }\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type webpack from 'webpack'\nimport type {\n  NullableMappedPosition,\n  RawSourceMap,\n} from 'next/dist/compiled/source-map08'\nimport { formatFrameSourceFile } from '../internal/helpers/webpack-module-path'\nimport type { MappedPosition } from 'source-map'\n\nfunction shouldIgnorePath(modulePath: string): boolean {\n  return (\n    modulePath.includes('node_modules') ||\n    // Only relevant for when Next.js is symlinked e.g. in the Next.js monorepo\n    modulePath.includes('next/dist')\n  )\n}\n\ntype IgnoredSources = Array<{ url: string; ignored: boolean }>\n\nexport interface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\ntype SourceAttributes = {\n  sourcePosition: NullableMappedPosition\n  sourceContent: string | null\n}\n\ntype Source =\n  | {\n      type: 'file'\n      sourceMap: RawSourceMap\n      ignoredSources: IgnoredSources\n      modulePath: string\n    }\n  | {\n      type: 'bundle'\n      sourceMap: RawSourceMap\n      ignoredSources: IgnoredSources\n      compilation: webpack.Compilation\n      moduleId: string\n      modulePath: string\n    }\n\nfunction getModuleById(\n  id: string | undefined,\n  compilation: webpack.Compilation\n) {\n  const { chunkGraph, modules } = compilation\n\n  return [...modules].find((module) => chunkGraph.getModuleId(module) === id)\n}\n\nfunction findModuleNotFoundFromError(errorMessage: string | undefined) {\n  return errorMessage?.match(/'([^']+)' module/)?.[1]\n}\n\nfunction getSourcePath(source: string) {\n  return source.replace(/^(webpack:\\/\\/\\/|webpack:\\/\\/|webpack:\\/\\/_N_E\\/)/, '')\n}\n\nasync function findOriginalSourcePositionAndContent(\n  sourceMap: RawSourceMap,\n  position: { line: number; column: number | null }\n): Promise<SourceAttributes | null> {\n  const consumer = await new SourceMapConsumer(sourceMap)\n  try {\n    const sourcePosition = consumer.originalPositionFor({\n      line: position.line,\n      column: position.column ?? 0,\n    })\n\n    if (!sourcePosition.source) {\n      return null\n    }\n\n    const sourceContent: string | null =\n      consumer.sourceContentFor(\n        sourcePosition.source,\n        /* returnNullOnMissing */ true\n      ) ?? null\n\n    return {\n      sourcePosition,\n      sourceContent,\n    }\n  } finally {\n    consumer.destroy()\n  }\n}\n\nexport function getIgnoredSources(sourceMap: RawSourceMap): IgnoredSources {\n  const ignoreList = new Set<number>()\n  const moduleFilenames = sourceMap?.sources ?? []\n\n  for (let index = 0; index < moduleFilenames.length; index++) {\n    // bundlerFilePath case: webpack://./app/page.tsx\n    const bundlerFilePath = moduleFilenames[index]\n    // Format the path to the normal file path\n    const formattedFilePath = formatFrameSourceFile(bundlerFilePath)\n    if (shouldIgnorePath(formattedFilePath)) {\n      ignoreList.add(index)\n    }\n  }\n\n  const ignoredSources = sourceMap.sources.map((source, index) => {\n    return {\n      url: source,\n      ignored: ignoreList.has(sourceMap.sources.indexOf(source)),\n      content: sourceMap.sourcesContent?.[index] ?? null,\n    }\n  })\n  return ignoredSources\n}\n\nfunction isIgnoredSource(\n  source: Source,\n  sourcePosition: MappedPosition | NullableMappedPosition\n) {\n  if (sourcePosition.source == null) {\n    return true\n  }\n  for (const ignoredSource of source.ignoredSources) {\n    if (ignoredSource.ignored && ignoredSource.url === sourcePosition.source) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction createStackFrame(searchParams: URLSearchParams) {\n  const file = searchParams.get('file') as string\n  return {\n    file,\n    methodName: searchParams.get('methodName') as string,\n    lineNumber: parseInt(searchParams.get('lineNumber') ?? '0', 10) || 0,\n    column: parseInt(searchParams.get('column') ?? '0', 10) || 0,\n    arguments: searchParams.getAll('arguments').filter(Boolean),\n  } satisfies StackFrame\n}\n\nfunction findOriginalSourcePositionAndContentFromCompilation(\n  moduleId: string | undefined,\n  importedModule: string,\n  compilation: webpack.Compilation\n): SourceAttributes | null {\n  const module = getModuleById(moduleId, compilation)\n  return module?.buildInfo?.importLocByPath?.get(importedModule) ?? null\n}\n\nexport async function createOriginalStackFrame({\n  source,\n  rootDirectory,\n  frame,\n  errorMessage,\n}: {\n  source: Source\n  rootDirectory: string\n  frame: StackFrame\n  errorMessage?: string\n}): Promise<OriginalStackFrameResponse | null> {\n  const { lineNumber, column } = frame\n  const moduleNotFound = findModuleNotFoundFromError(errorMessage)\n  const result = await (async () => {\n    if (moduleNotFound) {\n      if (source.type === 'file') {\n        return undefined\n      }\n\n      return findOriginalSourcePositionAndContentFromCompilation(\n        source.moduleId,\n        moduleNotFound,\n        source.compilation\n      )\n    }\n    // This returns 1-based lines and 0-based columns\n    return await findOriginalSourcePositionAndContent(source.sourceMap, {\n      line: lineNumber ?? 1,\n      column,\n    })\n  })()\n\n  if (!result) {\n    return null\n  }\n  const { sourcePosition, sourceContent } = result\n\n  if (!sourcePosition.source) {\n    return null\n  }\n\n  const ignored =\n    isIgnoredSource(source, sourcePosition) ||\n    // If the source file is externals, should be excluded even it's not ignored source.\n    // e.g. webpack://next/dist/.. needs to be ignored\n    shouldIgnorePath(source.modulePath)\n\n  const sourcePath = getSourcePath(\n    // When sourcePosition.source is the loader path the modulePath is generally better.\n    (sourcePosition.source!.includes('|')\n      ? source.modulePath\n      : sourcePosition.source) || source.modulePath\n  )\n  const filePath = path.resolve(rootDirectory, sourcePath)\n\n  const resolvedFilePath = sourceContent\n    ? path.relative(rootDirectory, filePath)\n    : sourcePosition.source\n\n  const traced: IgnorableStackFrame = {\n    file: resolvedFilePath,\n    lineNumber: sourcePosition.line,\n    column: (sourcePosition.column ?? 0) + 1,\n    methodName:\n      sourcePosition.name ||\n      // default is not a valid identifier in JS so webpack uses a custom variable when it's an unnamed default export\n      // Resolve it back to `default` for the method name if the source position didn't have the method.\n      frame.methodName\n        ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n        ?.replace('__webpack_exports__.', ''),\n    arguments: [],\n    ignored,\n  }\n\n  return {\n    originalStackFrame: traced,\n    originalCodeFrame: getOriginalCodeFrame(traced, sourceContent),\n  }\n}\n\nasync function getSourceMapFromCompilation(\n  id: string,\n  compilation: webpack.Compilation\n): Promise<RawSourceMap | undefined> {\n  try {\n    const module = getModuleById(id, compilation)\n\n    if (!module) {\n      return undefined\n    }\n\n    // @ts-expect-error The types for `CodeGenerationResults.get` require a\n    // runtime to be passed as second argument, but apparently it also works\n    // without it.\n    const codeGenerationResult = compilation.codeGenerationResults.get(module)\n    const source = codeGenerationResult?.sources.get('javascript')\n\n    return source?.map() ?? undefined\n  } catch (err) {\n    console.error(`Failed to lookup module by ID (\"${id}\"):`, err)\n    return undefined\n  }\n}\n\nasync function getSource(\n  filename: string,\n  options: {\n    getCompilations: () => webpack.Compilation[]\n  }\n): Promise<Source | undefined> {\n  const { getCompilations } = options\n\n  if (path.isAbsolute(filename)) {\n    filename = url.pathToFileURL(filename).href\n  }\n\n  if (filename.startsWith('file:')) {\n    const sourceMap = await getSourceMapFromFile(filename)\n    return sourceMap\n      ? {\n          type: 'file',\n          sourceMap,\n          ignoredSources: getIgnoredSources(sourceMap),\n          modulePath: filename.replace(/^file:\\/\\//, ''),\n        }\n      : undefined\n  }\n\n  // webpack-internal:///./src/hello.tsx => ./src/hello.tsx\n  // rsc://React/Server/webpack-internal:///(rsc)/./src/hello.tsx?42 => (rsc)/./src/hello.tsx\n  // webpack://_N_E/./src/hello.tsx => ./src/hello.tsx\n  const moduleId = filename\n    .replace(\n      /^(rsc:\\/\\/React\\/[^/]+\\/)?(webpack-internal:\\/\\/\\/|webpack:\\/\\/(_N_E\\/)?)/,\n      ''\n    )\n    .replace(/\\?\\d+$/, '')\n\n  // (rsc)/./src/hello.tsx => ./src/hello.tsx\n  const modulePath = moduleId.replace(/^(\\(.*\\)\\/?)/, '')\n\n  for (const compilation of getCompilations()) {\n    const sourceMap = await getSourceMapFromCompilation(moduleId, compilation)\n    const ignoreList = []\n    const moduleFilenames = sourceMap?.sources ?? []\n\n    for (let index = 0; index < moduleFilenames.length; index++) {\n      // bundlerFilePath case: webpack://./app/page.tsx\n      const bundlerFilePath = moduleFilenames[index]\n      // Format the path to the normal file path\n      const formattedFilePath = formatFrameSourceFile(bundlerFilePath)\n      if (shouldIgnorePath(formattedFilePath)) {\n        ignoreList.push(index)\n      }\n    }\n\n    if (sourceMap) {\n      const ignoredSources = getIgnoredSources(sourceMap)\n      return {\n        type: 'bundle',\n        sourceMap,\n        compilation,\n        moduleId,\n        modulePath,\n        ignoredSources,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function getOverlayMiddleware(options: {\n  rootDirectory: string\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const { rootDirectory, clientStats, serverStats, edgeServerStats } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname === '/__nextjs_original-stack-frame') {\n      const isServer = searchParams.get('isServer') === 'true'\n      const isEdgeServer = searchParams.get('isEdgeServer') === 'true'\n      const isAppDirectory = searchParams.get('isAppDirectory') === 'true'\n      const frame = createStackFrame(searchParams)\n\n      let source: Source | undefined\n      try {\n        source = await getSource(frame.file, {\n          getCompilations: () => {\n            const compilations: webpack.Compilation[] = []\n\n            // Try Client Compilation first. In `pages` we leverage\n            // `isClientError` to check. In `app` it depends on if it's a server\n            // / client component and when the code throws. E.g. during HTML\n            // rendering it's the server/edge compilation.\n            if ((!isEdgeServer && !isServer) || isAppDirectory) {\n              const compilation = clientStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Server Compilation. In `pages` this could be something\n            // imported in getServerSideProps/getStaticProps as the code for\n            // those is tree-shaken. In `app` this finds server components and\n            // code that was imported from a server component. It also covers\n            // when client component code throws during HTML rendering.\n            if (isServer || isAppDirectory) {\n              const compilation = serverStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Edge Server Compilation. Both cases are the same as Server\n            // Compilation, main difference is that it covers `runtime: 'edge'`\n            // pages/app routes.\n            if (isEdgeServer || isAppDirectory) {\n              const compilation = edgeServerStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            return compilations\n          },\n        })\n      } catch (err) {\n        console.error('Failed to get source map:', err)\n        return internalServerError(res)\n      }\n\n      // This stack frame is used for the one that couldn't locate the source or source mapped frame\n      const defaultStackFrame: IgnorableStackFrame = {\n        file: frame.file,\n        lineNumber: frame.lineNumber,\n        column: frame.column ?? 1,\n        methodName: frame.methodName,\n        ignored: shouldIgnorePath(frame.file),\n        arguments: [],\n      }\n      if (!source) {\n        // return original stack frame with no source map\n        return json(res, {\n          originalStackFrame: defaultStackFrame,\n          originalCodeFrame: null,\n        })\n      }\n\n      try {\n        const originalStackFrameResponse = await createOriginalStackFrame({\n          frame,\n          source,\n          rootDirectory,\n        })\n\n        if (!originalStackFrameResponse) {\n          return json(res, {\n            originalStackFrame: defaultStackFrame,\n            originalCodeFrame: null,\n          })\n        }\n\n        return json(res, originalStackFrameResponse)\n      } catch (err) {\n        console.log('Failed to parse source map:', err)\n        return internalServerError(res)\n      }\n    } else if (pathname === '/__nextjs_launch-editor') {\n      const frame = createStackFrame(searchParams)\n\n      if (!frame.file) return badRequest(res)\n\n      // frame files may start with their webpack layer, like (middleware)/middleware.js\n      const filePath = path.resolve(\n        rootDirectory,\n        frame.file.replace(/^\\([^)]+\\)\\//, '')\n      )\n      const fileExists = await fs.access(filePath, FS.F_OK).then(\n        () => true,\n        () => false\n      )\n      if (!fileExists) return noContent(res)\n\n      try {\n        await launchEditor(filePath, frame.lineNumber, frame.column ?? 1)\n      } catch (err) {\n        console.log('Failed to launch editor:', err)\n        return internalServerError(res)\n      }\n\n      return noContent(res)\n    }\n\n    return next()\n  }\n}\n\nexport function getSourceMapMiddleware(options: {\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const { clientStats, serverStats, edgeServerStats } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname !== '/__nextjs_source-map') {\n      return next()\n    }\n\n    const filename = searchParams.get('filename')\n\n    if (!filename) {\n      return badRequest(res)\n    }\n\n    let source: Source | undefined\n\n    try {\n      source = await getSource(filename, {\n        getCompilations: () => {\n          const compilations: webpack.Compilation[] = []\n\n          for (const stats of [\n            clientStats(),\n            serverStats(),\n            edgeServerStats(),\n          ]) {\n            if (stats?.compilation) {\n              compilations.push(stats.compilation)\n            }\n          }\n\n          return compilations\n        },\n      })\n    } catch (error) {\n      console.error('Failed to get source map:', error)\n\n      return internalServerError(res)\n    }\n\n    if (!source) {\n      return noContent(res)\n    }\n\n    return json(res, source.sourceMap)\n  }\n}\n"],"names":["createOriginalStackFrame","getIgnoredSources","getOverlayMiddleware","getServerError","getSourceMapFromFile","getSourceMapMiddleware","parseStack","shouldIgnorePath","modulePath","includes","getModuleById","id","compilation","chunkGraph","modules","find","module","getModuleId","findModuleNotFoundFromError","errorMessage","match","getSourcePath","source","replace","findOriginalSourcePositionAndContent","sourceMap","position","consumer","SourceMapConsumer","sourcePosition","originalPositionFor","line","column","sourceContent","sourceContentFor","destroy","ignoreList","Set","moduleFilenames","sources","index","length","bundlerFilePath","formattedFilePath","formatFrameSourceFile","add","ignoredSources","map","url","ignored","has","indexOf","content","sourcesContent","isIgnoredSource","ignoredSource","createStackFrame","searchParams","file","get","methodName","lineNumber","parseInt","arguments","getAll","filter","Boolean","findOriginalSourcePositionAndContentFromCompilation","moduleId","importedModule","buildInfo","importLocByPath","rootDirectory","frame","moduleNotFound","result","type","undefined","sourcePath","filePath","path","resolve","resolvedFilePath","relative","traced","name","originalStackFrame","originalCodeFrame","getOriginalCodeFrame","getSourceMapFromCompilation","codeGenerationResult","codeGenerationResults","err","console","error","getSource","filename","options","getCompilations","isAbsolute","pathToFileURL","href","startsWith","push","clientStats","serverStats","edgeServerStats","req","res","next","pathname","URL","isServer","isEdgeServer","isAppDirectory","compilations","internalServerError","defaultStackFrame","json","originalStackFrameResponse","log","badRequest","fileExists","fs","access","FS","F_OK","then","noContent","launchEditor","stats"],"mappings":"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"}