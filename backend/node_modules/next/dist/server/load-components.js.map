{"version":3,"sources":["../../src/server/load-components.ts"],"sourcesContent":["import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isMetadataRoute } from '../lib/metadata/is-metadata-route'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n/**\n * This manifest prevents removing server rendered <link> tags after client\n * navigation. This is only needed under `Pages dir && Production && Webpack`.\n * @see https://github.com/vercel/next.js/pull/72959\n */\nexport type DynamicCssManifest = string[]\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathname, LoadableManifest>`\n * where pathname is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  dynamicCssManifest?: DeepReadonly<DynamicCssManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n  multiZoneDraftMode?: boolean\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function loadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string,\n  attempts?: number\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath, attempts)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n  isDev,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n  isDev: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // Make sure to avoid loading the manifest for metadata route handlers.\n  const hasClientManifest = isAppPath && !isMetadataRoute(page)\n\n  // In dev mode we retry loading a manifest file to handle a race condition\n  // that can occur while app and pages are compiling at the same time, and the\n  // build-manifest is still being written to disk while an app path is\n  // attempting to load.\n  const manifestLoadAttempts = isDev ? 3 : 1\n\n  // Load the manifest files first\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(\n      join(distDir, BUILD_MANIFEST),\n      manifestLoadAttempts\n    ),\n    loadManifestWithRetries<ReactLoadableManifest>(\n      join(distDir, REACT_LOADABLE_MANIFEST),\n      manifestLoadAttempts\n    ),\n    // This manifest will only exist in Pages dir && Production && Webpack.\n    isAppPath || process.env.TURBOPACK\n      ? undefined\n      : loadManifestWithRetries<DynamicCssManifest>(\n          join(distDir, `${DYNAMIC_CSS_MANIFEST}.json`),\n          manifestLoadAttempts\n        ).catch(() => undefined),\n    hasClientManifest\n      ? loadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_'),\n          manifestLoadAttempts\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json'),\n          manifestLoadAttempts\n        ).catch(() => null)\n      : null,\n  ])\n\n  // Before requiring the actual page module, we have to set the reference\n  // manifests to our global store so Server Action's encryption util can access\n  // to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n"],"names":["evalManifestWithRetries","loadComponents","loadManifestWithRetries","manifestPath","attempts","loadManifest","err","wait","evalManifest","loadClientReferenceManifest","entryName","context","__RSC_MANIFEST","undefined","loadComponentsImpl","distDir","page","isAppPath","isDev","DocumentMod","AppMod","Promise","all","requirePage","hasClientManifest","isMetadataRoute","manifestLoadAttempts","buildManifest","reactLoadableManifest","dynamicCssManifest","clientReferenceManifest","serverActionsManifest","join","BUILD_MANIFEST","REACT_LOADABLE_MANIFEST","process","env","TURBOPACK","DYNAMIC_CSS_MANIFEST","catch","replace","CLIENT_REFERENCE_MANIFEST","SERVER_REFERENCE_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","createServerModuleMap","ComponentMod","Component","interopDefault","Document","App","getServerSideProps","getStaticProps","getStaticPaths","routeModule","pageConfig","config","getTracer","wrap","LoadComponentsSpan"],"mappings":"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"}