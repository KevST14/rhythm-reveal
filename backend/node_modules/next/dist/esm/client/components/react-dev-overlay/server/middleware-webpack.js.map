{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/server/middleware-webpack.ts"],"sourcesContent":["import { constants as FS, promises as fs } from 'fs'\nimport path from 'path'\nimport url from 'url'\nimport { SourceMapConsumer } from 'next/dist/compiled/source-map08'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport { getSourceMapFromFile } from '../internal/helpers/get-source-map-from-file'\nimport { launchEditor } from '../internal/helpers/launchEditor'\nimport {\n  badRequest,\n  getOriginalCodeFrame,\n  internalServerError,\n  json,\n  noContent,\n  type OriginalStackFrameResponse,\n} from './shared'\nexport { getServerError } from '../internal/helpers/node-stack-frames'\nexport { parseStack } from '../internal/helpers/parse-stack'\nexport { getSourceMapFromFile }\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type webpack from 'webpack'\nimport type {\n  NullableMappedPosition,\n  RawSourceMap,\n} from 'next/dist/compiled/source-map08'\nimport { formatFrameSourceFile } from '../internal/helpers/webpack-module-path'\nimport type { MappedPosition } from 'source-map'\n\nfunction shouldIgnorePath(modulePath: string): boolean {\n  return (\n    modulePath.includes('node_modules') ||\n    // Only relevant for when Next.js is symlinked e.g. in the Next.js monorepo\n    modulePath.includes('next/dist')\n  )\n}\n\ntype IgnoredSources = Array<{ url: string; ignored: boolean }>\n\nexport interface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\ntype SourceAttributes = {\n  sourcePosition: NullableMappedPosition\n  sourceContent: string | null\n}\n\ntype Source =\n  | {\n      type: 'file'\n      sourceMap: RawSourceMap\n      ignoredSources: IgnoredSources\n      modulePath: string\n    }\n  | {\n      type: 'bundle'\n      sourceMap: RawSourceMap\n      ignoredSources: IgnoredSources\n      compilation: webpack.Compilation\n      moduleId: string\n      modulePath: string\n    }\n\nfunction getModuleById(\n  id: string | undefined,\n  compilation: webpack.Compilation\n) {\n  const { chunkGraph, modules } = compilation\n\n  return [...modules].find((module) => chunkGraph.getModuleId(module) === id)\n}\n\nfunction findModuleNotFoundFromError(errorMessage: string | undefined) {\n  return errorMessage?.match(/'([^']+)' module/)?.[1]\n}\n\nfunction getSourcePath(source: string) {\n  return source.replace(/^(webpack:\\/\\/\\/|webpack:\\/\\/|webpack:\\/\\/_N_E\\/)/, '')\n}\n\nasync function findOriginalSourcePositionAndContent(\n  sourceMap: RawSourceMap,\n  position: { line: number; column: number | null }\n): Promise<SourceAttributes | null> {\n  const consumer = await new SourceMapConsumer(sourceMap)\n  try {\n    const sourcePosition = consumer.originalPositionFor({\n      line: position.line,\n      column: position.column ?? 0,\n    })\n\n    if (!sourcePosition.source) {\n      return null\n    }\n\n    const sourceContent: string | null =\n      consumer.sourceContentFor(\n        sourcePosition.source,\n        /* returnNullOnMissing */ true\n      ) ?? null\n\n    return {\n      sourcePosition,\n      sourceContent,\n    }\n  } finally {\n    consumer.destroy()\n  }\n}\n\nexport function getIgnoredSources(sourceMap: RawSourceMap): IgnoredSources {\n  const ignoreList = new Set<number>()\n  const moduleFilenames = sourceMap?.sources ?? []\n\n  for (let index = 0; index < moduleFilenames.length; index++) {\n    // bundlerFilePath case: webpack://./app/page.tsx\n    const bundlerFilePath = moduleFilenames[index]\n    // Format the path to the normal file path\n    const formattedFilePath = formatFrameSourceFile(bundlerFilePath)\n    if (shouldIgnorePath(formattedFilePath)) {\n      ignoreList.add(index)\n    }\n  }\n\n  const ignoredSources = sourceMap.sources.map((source, index) => {\n    return {\n      url: source,\n      ignored: ignoreList.has(sourceMap.sources.indexOf(source)),\n      content: sourceMap.sourcesContent?.[index] ?? null,\n    }\n  })\n  return ignoredSources\n}\n\nfunction isIgnoredSource(\n  source: Source,\n  sourcePosition: MappedPosition | NullableMappedPosition\n) {\n  if (sourcePosition.source == null) {\n    return true\n  }\n  for (const ignoredSource of source.ignoredSources) {\n    if (ignoredSource.ignored && ignoredSource.url === sourcePosition.source) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction createStackFrame(searchParams: URLSearchParams) {\n  const file = searchParams.get('file') as string\n  return {\n    file,\n    methodName: searchParams.get('methodName') as string,\n    lineNumber: parseInt(searchParams.get('lineNumber') ?? '0', 10) || 0,\n    column: parseInt(searchParams.get('column') ?? '0', 10) || 0,\n    arguments: searchParams.getAll('arguments').filter(Boolean),\n  } satisfies StackFrame\n}\n\nfunction findOriginalSourcePositionAndContentFromCompilation(\n  moduleId: string | undefined,\n  importedModule: string,\n  compilation: webpack.Compilation\n): SourceAttributes | null {\n  const module = getModuleById(moduleId, compilation)\n  return module?.buildInfo?.importLocByPath?.get(importedModule) ?? null\n}\n\nexport async function createOriginalStackFrame({\n  source,\n  rootDirectory,\n  frame,\n  errorMessage,\n}: {\n  source: Source\n  rootDirectory: string\n  frame: StackFrame\n  errorMessage?: string\n}): Promise<OriginalStackFrameResponse | null> {\n  const { lineNumber, column } = frame\n  const moduleNotFound = findModuleNotFoundFromError(errorMessage)\n  const result = await (async () => {\n    if (moduleNotFound) {\n      if (source.type === 'file') {\n        return undefined\n      }\n\n      return findOriginalSourcePositionAndContentFromCompilation(\n        source.moduleId,\n        moduleNotFound,\n        source.compilation\n      )\n    }\n    // This returns 1-based lines and 0-based columns\n    return await findOriginalSourcePositionAndContent(source.sourceMap, {\n      line: lineNumber ?? 1,\n      column,\n    })\n  })()\n\n  if (!result) {\n    return null\n  }\n  const { sourcePosition, sourceContent } = result\n\n  if (!sourcePosition.source) {\n    return null\n  }\n\n  const ignored =\n    isIgnoredSource(source, sourcePosition) ||\n    // If the source file is externals, should be excluded even it's not ignored source.\n    // e.g. webpack://next/dist/.. needs to be ignored\n    shouldIgnorePath(source.modulePath)\n\n  const sourcePath = getSourcePath(\n    // When sourcePosition.source is the loader path the modulePath is generally better.\n    (sourcePosition.source!.includes('|')\n      ? source.modulePath\n      : sourcePosition.source) || source.modulePath\n  )\n  const filePath = path.resolve(rootDirectory, sourcePath)\n\n  const resolvedFilePath = sourceContent\n    ? path.relative(rootDirectory, filePath)\n    : sourcePosition.source\n\n  const traced: IgnorableStackFrame = {\n    file: resolvedFilePath,\n    lineNumber: sourcePosition.line,\n    column: (sourcePosition.column ?? 0) + 1,\n    methodName:\n      sourcePosition.name ||\n      // default is not a valid identifier in JS so webpack uses a custom variable when it's an unnamed default export\n      // Resolve it back to `default` for the method name if the source position didn't have the method.\n      frame.methodName\n        ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n        ?.replace('__webpack_exports__.', ''),\n    arguments: [],\n    ignored,\n  }\n\n  return {\n    originalStackFrame: traced,\n    originalCodeFrame: getOriginalCodeFrame(traced, sourceContent),\n  }\n}\n\nasync function getSourceMapFromCompilation(\n  id: string,\n  compilation: webpack.Compilation\n): Promise<RawSourceMap | undefined> {\n  try {\n    const module = getModuleById(id, compilation)\n\n    if (!module) {\n      return undefined\n    }\n\n    // @ts-expect-error The types for `CodeGenerationResults.get` require a\n    // runtime to be passed as second argument, but apparently it also works\n    // without it.\n    const codeGenerationResult = compilation.codeGenerationResults.get(module)\n    const source = codeGenerationResult?.sources.get('javascript')\n\n    return source?.map() ?? undefined\n  } catch (err) {\n    console.error(`Failed to lookup module by ID (\"${id}\"):`, err)\n    return undefined\n  }\n}\n\nasync function getSource(\n  filename: string,\n  options: {\n    getCompilations: () => webpack.Compilation[]\n  }\n): Promise<Source | undefined> {\n  const { getCompilations } = options\n\n  if (path.isAbsolute(filename)) {\n    filename = url.pathToFileURL(filename).href\n  }\n\n  if (filename.startsWith('file:')) {\n    const sourceMap = await getSourceMapFromFile(filename)\n    return sourceMap\n      ? {\n          type: 'file',\n          sourceMap,\n          ignoredSources: getIgnoredSources(sourceMap),\n          modulePath: filename.replace(/^file:\\/\\//, ''),\n        }\n      : undefined\n  }\n\n  // webpack-internal:///./src/hello.tsx => ./src/hello.tsx\n  // rsc://React/Server/webpack-internal:///(rsc)/./src/hello.tsx?42 => (rsc)/./src/hello.tsx\n  // webpack://_N_E/./src/hello.tsx => ./src/hello.tsx\n  const moduleId = filename\n    .replace(\n      /^(rsc:\\/\\/React\\/[^/]+\\/)?(webpack-internal:\\/\\/\\/|webpack:\\/\\/(_N_E\\/)?)/,\n      ''\n    )\n    .replace(/\\?\\d+$/, '')\n\n  // (rsc)/./src/hello.tsx => ./src/hello.tsx\n  const modulePath = moduleId.replace(/^(\\(.*\\)\\/?)/, '')\n\n  for (const compilation of getCompilations()) {\n    const sourceMap = await getSourceMapFromCompilation(moduleId, compilation)\n    const ignoreList = []\n    const moduleFilenames = sourceMap?.sources ?? []\n\n    for (let index = 0; index < moduleFilenames.length; index++) {\n      // bundlerFilePath case: webpack://./app/page.tsx\n      const bundlerFilePath = moduleFilenames[index]\n      // Format the path to the normal file path\n      const formattedFilePath = formatFrameSourceFile(bundlerFilePath)\n      if (shouldIgnorePath(formattedFilePath)) {\n        ignoreList.push(index)\n      }\n    }\n\n    if (sourceMap) {\n      const ignoredSources = getIgnoredSources(sourceMap)\n      return {\n        type: 'bundle',\n        sourceMap,\n        compilation,\n        moduleId,\n        modulePath,\n        ignoredSources,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function getOverlayMiddleware(options: {\n  rootDirectory: string\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const { rootDirectory, clientStats, serverStats, edgeServerStats } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname === '/__nextjs_original-stack-frame') {\n      const isServer = searchParams.get('isServer') === 'true'\n      const isEdgeServer = searchParams.get('isEdgeServer') === 'true'\n      const isAppDirectory = searchParams.get('isAppDirectory') === 'true'\n      const frame = createStackFrame(searchParams)\n\n      let source: Source | undefined\n      try {\n        source = await getSource(frame.file, {\n          getCompilations: () => {\n            const compilations: webpack.Compilation[] = []\n\n            // Try Client Compilation first. In `pages` we leverage\n            // `isClientError` to check. In `app` it depends on if it's a server\n            // / client component and when the code throws. E.g. during HTML\n            // rendering it's the server/edge compilation.\n            if ((!isEdgeServer && !isServer) || isAppDirectory) {\n              const compilation = clientStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Server Compilation. In `pages` this could be something\n            // imported in getServerSideProps/getStaticProps as the code for\n            // those is tree-shaken. In `app` this finds server components and\n            // code that was imported from a server component. It also covers\n            // when client component code throws during HTML rendering.\n            if (isServer || isAppDirectory) {\n              const compilation = serverStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Edge Server Compilation. Both cases are the same as Server\n            // Compilation, main difference is that it covers `runtime: 'edge'`\n            // pages/app routes.\n            if (isEdgeServer || isAppDirectory) {\n              const compilation = edgeServerStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            return compilations\n          },\n        })\n      } catch (err) {\n        console.error('Failed to get source map:', err)\n        return internalServerError(res)\n      }\n\n      // This stack frame is used for the one that couldn't locate the source or source mapped frame\n      const defaultStackFrame: IgnorableStackFrame = {\n        file: frame.file,\n        lineNumber: frame.lineNumber,\n        column: frame.column ?? 1,\n        methodName: frame.methodName,\n        ignored: shouldIgnorePath(frame.file),\n        arguments: [],\n      }\n      if (!source) {\n        // return original stack frame with no source map\n        return json(res, {\n          originalStackFrame: defaultStackFrame,\n          originalCodeFrame: null,\n        })\n      }\n\n      try {\n        const originalStackFrameResponse = await createOriginalStackFrame({\n          frame,\n          source,\n          rootDirectory,\n        })\n\n        if (!originalStackFrameResponse) {\n          return json(res, {\n            originalStackFrame: defaultStackFrame,\n            originalCodeFrame: null,\n          })\n        }\n\n        return json(res, originalStackFrameResponse)\n      } catch (err) {\n        console.log('Failed to parse source map:', err)\n        return internalServerError(res)\n      }\n    } else if (pathname === '/__nextjs_launch-editor') {\n      const frame = createStackFrame(searchParams)\n\n      if (!frame.file) return badRequest(res)\n\n      // frame files may start with their webpack layer, like (middleware)/middleware.js\n      const filePath = path.resolve(\n        rootDirectory,\n        frame.file.replace(/^\\([^)]+\\)\\//, '')\n      )\n      const fileExists = await fs.access(filePath, FS.F_OK).then(\n        () => true,\n        () => false\n      )\n      if (!fileExists) return noContent(res)\n\n      try {\n        await launchEditor(filePath, frame.lineNumber, frame.column ?? 1)\n      } catch (err) {\n        console.log('Failed to launch editor:', err)\n        return internalServerError(res)\n      }\n\n      return noContent(res)\n    }\n\n    return next()\n  }\n}\n\nexport function getSourceMapMiddleware(options: {\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const { clientStats, serverStats, edgeServerStats } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname !== '/__nextjs_source-map') {\n      return next()\n    }\n\n    const filename = searchParams.get('filename')\n\n    if (!filename) {\n      return badRequest(res)\n    }\n\n    let source: Source | undefined\n\n    try {\n      source = await getSource(filename, {\n        getCompilations: () => {\n          const compilations: webpack.Compilation[] = []\n\n          for (const stats of [\n            clientStats(),\n            serverStats(),\n            edgeServerStats(),\n          ]) {\n            if (stats?.compilation) {\n              compilations.push(stats.compilation)\n            }\n          }\n\n          return compilations\n        },\n      })\n    } catch (error) {\n      console.error('Failed to get source map:', error)\n\n      return internalServerError(res)\n    }\n\n    if (!source) {\n      return noContent(res)\n    }\n\n    return json(res, source.sourceMap)\n  }\n}\n"],"names":["constants","FS","promises","fs","path","url","SourceMapConsumer","getSourceMapFromFile","launchEditor","badRequest","getOriginalCodeFrame","internalServerError","json","noContent","getServerError","parseStack","formatFrameSourceFile","shouldIgnorePath","modulePath","includes","getModuleById","id","compilation","chunkGraph","modules","find","module","getModuleId","findModuleNotFoundFromError","errorMessage","match","getSourcePath","source","replace","findOriginalSourcePositionAndContent","sourceMap","position","consumer","sourcePosition","originalPositionFor","line","column","sourceContent","sourceContentFor","destroy","getIgnoredSources","ignoreList","Set","moduleFilenames","sources","index","length","bundlerFilePath","formattedFilePath","add","ignoredSources","map","ignored","has","indexOf","content","sourcesContent","isIgnoredSource","ignoredSource","createStackFrame","searchParams","file","get","methodName","lineNumber","parseInt","arguments","getAll","filter","Boolean","findOriginalSourcePositionAndContentFromCompilation","moduleId","importedModule","buildInfo","importLocByPath","createOriginalStackFrame","rootDirectory","frame","moduleNotFound","result","type","undefined","sourcePath","filePath","resolve","resolvedFilePath","relative","traced","name","originalStackFrame","originalCodeFrame","getSourceMapFromCompilation","codeGenerationResult","codeGenerationResults","err","console","error","getSource","filename","options","getCompilations","isAbsolute","pathToFileURL","href","startsWith","push","getOverlayMiddleware","clientStats","serverStats","edgeServerStats","req","res","next","pathname","URL","isServer","isEdgeServer","isAppDirectory","compilations","defaultStackFrame","originalStackFrameResponse","log","fileExists","access","F_OK","then","getSourceMapMiddleware","stats"],"mappings":"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"}