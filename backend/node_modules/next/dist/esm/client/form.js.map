{"version":3,"sources":["../../src/client/form.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, type HTMLProps, type FormEvent, useContext } from 'react'\nimport { addBasePath } from './add-base-path'\nimport { useIntersection } from './use-intersection'\nimport { useMergedRef } from './use-merged-ref'\nimport {\n  AppRouterContext,\n  type AppRouterInstance,\n} from '../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from './components/router-reducer/router-reducer-types'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport type { NextRouter } from './router'\n\nconst DISALLOWED_FORM_PROPS = ['method', 'encType', 'target'] as const\n\ntype HTMLFormProps = HTMLProps<HTMLFormElement>\ntype DisallowedFormProps = (typeof DISALLOWED_FORM_PROPS)[number]\n\ntype InternalFormProps = {\n  /**\n   * `action` can be either a `string` or a function.\n   * - If `action` is a string, it will be interpreted as a path or URL to navigate to when the form is submitted.\n   *   The path will be prefetched when the form becomes visible.\n   * - If `action` is a function, it will be called when the form is submitted. See the [React docs](https://react.dev/reference/react-dom/components/form#props) for more.\n   */\n  action: NonNullable<HTMLFormProps['action']>\n  /**\n   * Controls how the route specified by `action` is prefetched.\n   * Any `<Form />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * Options:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `false`: This will not prefetch any data.\n   *\n   * In pages dir, prefetching is not supported, and passing this prop will emit a warning.\n   *\n   * @defaultValue `null`\n   */\n  prefetch?: false | null\n  /**\n   * Whether submitting the form should replace the current `history` state instead of adding a new url into the stack.\n   * Only valid if `action` is a string.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Override the default scroll behavior when navigating.\n   * Only valid if `action` is a string.\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n} & Omit<HTMLFormProps, 'action' | DisallowedFormProps>\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type FormProps<RouteInferType = any> = InternalFormProps\n\nexport default function Form({\n  replace,\n  scroll,\n  prefetch: prefetchProp,\n  ref: externalRef,\n  ...props\n}: FormProps) {\n  const router = useAppOrPagesRouter()\n\n  const actionProp = props.action\n  const isNavigatingForm = typeof actionProp === 'string'\n\n  // Validate `action`\n  if (process.env.NODE_ENV === 'development') {\n    if (isNavigatingForm) {\n      checkActionUrl(actionProp, 'action')\n    }\n  }\n\n  // Validate `prefetch`\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      !(\n        prefetchProp === undefined ||\n        prefetchProp === false ||\n        prefetchProp === null\n      )\n    ) {\n      console.error('The `prefetch` prop of <Form> must be `false` or `null`')\n    }\n\n    if (prefetchProp !== undefined) {\n      if (!isAppRouter(router)) {\n        console.error(\n          'Passing `prefetch` to a <Form> has no effect in the pages directory.'\n        )\n      } else if (!isNavigatingForm) {\n        console.error(\n          'Passing `prefetch` to a <Form> whose `action` is a function has no effect.'\n        )\n      }\n    }\n  }\n\n  const prefetch =\n    prefetchProp === false || prefetchProp === null ? prefetchProp : null\n\n  // Validate `scroll` and `replace`\n  if (process.env.NODE_ENV === 'development') {\n    if (!isNavigatingForm && (replace !== undefined || scroll !== undefined)) {\n      console.error(\n        'Passing `replace` or `scroll` to a <Form> whose `action` is a function has no effect.\\n' +\n          'See the relevant docs to learn how to control this behavior for navigations triggered from actions:\\n' +\n          '  `redirect()`       - https://nextjs.org/docs/app/api-reference/functions/redirect#parameters\\n' +\n          '  `router.replace()` - https://nextjs.org/docs/app/api-reference/functions/use-router#userouter\\n'\n      )\n    }\n  }\n\n  // Clean up any unsupported form props (and warn if present)\n  for (const key of DISALLOWED_FORM_PROPS) {\n    if (key in props) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error(\n          `<Form> does not support changing \\`${key}\\`. ` +\n            (isNavigatingForm\n              ? `If you'd like to use it to perform a mutation, consider making \\`action\\` a function instead.\\n` +\n                `Learn more: https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations`\n              : '')\n        )\n      }\n      delete (props as Record<string, unknown>)[key]\n    }\n  }\n\n  const isPrefetchEnabled =\n    // there is no notion of instant loading states in pages dir, so prefetching is pointless\n    isAppRouter(router) &&\n    // if we don't have an action path, we can't preload anything anyway.\n    isNavigatingForm &&\n    prefetch === null\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n    disabled: !isPrefetchEnabled,\n  })\n\n  const ownRef = useMergedRef<HTMLFormElement>(\n    setIntersectionRef,\n    externalRef ?? null\n  )\n\n  useEffect(() => {\n    if (!isVisible || !isPrefetchEnabled) {\n      return\n    }\n\n    try {\n      const prefetchKind = PrefetchKind.AUTO\n      router.prefetch(actionProp, { kind: prefetchKind })\n    } catch (err) {\n      console.error(err)\n    }\n  }, [isPrefetchEnabled, isVisible, actionProp, prefetch, router])\n\n  if (!isNavigatingForm) {\n    return <form {...props} ref={ownRef} />\n  }\n\n  const actionHref = addBasePath(actionProp)\n\n  return (\n    <form\n      {...props}\n      ref={ownRef}\n      action={actionHref}\n      onSubmit={(event) =>\n        onFormSubmit(event, {\n          router,\n          actionHref,\n          replace,\n          scroll,\n          onSubmit: props.onSubmit,\n        })\n      }\n    />\n  )\n}\n\nfunction onFormSubmit(\n  event: FormEvent<HTMLFormElement>,\n  {\n    actionHref,\n    onSubmit,\n    replace,\n    scroll,\n    router,\n  }: {\n    actionHref: string\n    onSubmit: FormProps['onSubmit']\n    replace: FormProps['replace']\n    scroll: FormProps['scroll']\n    router: SomeRouter\n  }\n) {\n  if (typeof onSubmit === 'function') {\n    onSubmit(event)\n\n    // if the user called event.preventDefault(), do nothing.\n    // (this matches what Link does for `onClick`)\n    if (event.defaultPrevented) {\n      return\n    }\n  }\n\n  const formElement = event.currentTarget\n  const submitter = (event.nativeEvent as SubmitEvent).submitter\n\n  let action = actionHref\n\n  if (submitter) {\n    if (process.env.NODE_ENV === 'development') {\n      // the way server actions are encoded (e.g. `formMethod=\"post\")\n      // causes some unnecessary dev-mode warnings from `hasUnsupportedSubmitterAttributes`.\n      // we'd bail out anyway, but we just do it silently.\n      if (hasReactServerActionAttributes(submitter)) {\n        return\n      }\n    }\n\n    if (hasUnsupportedSubmitterAttributes(submitter)) {\n      return\n    }\n\n    // client actions have `formAction=\"javascript:...\"`. We obviously can't prefetch/navigate to that.\n    if (hasReactClientActionAttributes(submitter)) {\n      return\n    }\n\n    // If the submitter specified an alternate formAction,\n    // use that URL instead -- this is what a native form would do.\n    // NOTE: `submitter.formAction` is unreliable, because it will give us `location.href` if it *wasn't* set\n    // NOTE: this should not have `basePath` added, because we can't add it before hydration\n    const submitterFormAction = submitter.getAttribute('formAction')\n    if (submitterFormAction !== null) {\n      if (process.env.NODE_ENV === 'development') {\n        checkActionUrl(submitterFormAction, 'formAction')\n      }\n      action = submitterFormAction\n    }\n  }\n\n  let targetUrl: URL\n  try {\n    // NOTE: It might be more correct to resolve URLs relative to `document.baseURI`,\n    // but we already do it relative to `location.href` elsewhere:\n    //  (see e.g. https://github.com/vercel/next.js/blob/bb0e6722f87ceb2d43015f5b8a413d0072f2badf/packages/next/src/client/components/app-router.tsx#L146)\n    // so it's better to stay consistent.\n    const base = window.location.href\n    targetUrl = new URL(action, base)\n  } catch (err) {\n    throw new Error(`Cannot parse form action \"${action}\" as a URL`, {\n      cause: err,\n    })\n  }\n  if (targetUrl.searchParams.size) {\n    // url-encoded HTML forms *overwrite* any search params in the `action` url:\n    //\n    //  \"Let `query` be the result of running the application/x-www-form-urlencoded serializer [...]\"\n    //  \"Set parsed action's query component to `query`.\"\n    //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#submit-mutate-action\n    //\n    // We need to match that.\n    // (note that all other parts of the URL, like `hash`, are preserved)\n    targetUrl.search = ''\n  }\n\n  const formData = new FormData(formElement)\n\n  for (let [name, value] of formData) {\n    if (typeof value !== 'string') {\n      // For file inputs, the native browser behavior is to use the filename as the value instead:\n      //\n      //   \"If entry's value is a File object, then let value be entry's value's name. Otherwise, let value be entry's value.\"\n      //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n      //\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          `<Form> only supports file inputs if \\`action\\` is a function. File inputs cannot be used if \\`action\\` is a string, ` +\n            `because files cannot be encoded as search params.`\n        )\n      }\n      value = value.name\n    }\n\n    targetUrl.searchParams.append(name, value)\n  }\n\n  // Finally, no more reasons for bailing out.\n  event.preventDefault()\n\n  const method = replace ? 'replace' : 'push'\n  const targetHref = targetUrl.href\n  if (isAppRouter(router)) {\n    router[method](targetHref, { scroll })\n  } else {\n    // TODO(form): Make this use a transition so that pending states work\n    //\n    // Unlike the app router, pages router doesn't use startTransition,\n    // and can't easily be wrapped in one because of implementation details\n    // (e.g. it doesn't use any react state)\n    // But it's important to have this wrapped in a transition because\n    // pending states from e.g. `useFormStatus` rely on that.\n    // So this needs some follow up work.\n    router[method](targetHref, undefined, { scroll })\n  }\n}\n\ntype SomeRouter = AppRouterInstance | NextRouter\n\nfunction isAppRouter(router: SomeRouter): router is AppRouterInstance {\n  return !('asPath' in router)\n}\n\nfunction useAppOrPagesRouter(): SomeRouter {\n  const pagesRouter = useContext(RouterContext)\n  const appRouter = useContext(AppRouterContext)\n  if (pagesRouter) {\n    return pagesRouter\n  } else {\n    // We're in the app directory if there is no pages router.\n    return appRouter!\n  }\n}\n\nfunction checkActionUrl(action: string, source: 'action' | 'formAction') {\n  const aPropName = source === 'action' ? `an \\`action\\`` : `a \\`formAction\\``\n\n  let testUrl: URL\n  try {\n    testUrl = new URL(action, 'http://n')\n  } catch (err) {\n    console.error(\n      `<Form> received ${aPropName} that cannot be parsed as a URL: \"${action}\".`\n    )\n    return\n  }\n\n  // url-encoded HTML forms ignore any queryparams in the `action` url. We need to match that.\n  if (testUrl.searchParams.size) {\n    console.warn(\n      `<Form> received ${aPropName} that contains search params: \"${action}\". This is not supported, and they will be ignored. ` +\n        `If you need to pass in additional search params, use an \\`<input type=\"hidden\" />\\` instead.`\n    )\n  }\n}\n\nconst isSupportedEncType = (value: string) =>\n  value === 'application/x-www-form-urlencoded'\nconst isSupportedMethod = (value: string) => value === 'get'\nconst isSupportedTarget = (value: string) => value === '_self'\n\nfunction hasUnsupportedSubmitterAttributes(submitter: HTMLElement): boolean {\n  // A submitter can override `encType` for the form.\n  const formEncType = submitter.getAttribute('formEncType')\n  if (formEncType !== null && !isSupportedEncType(formEncType)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`encType\\` was set to an unsupported value via \\`formEncType=\"${formEncType}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  // A submitter can override `method` for the form.\n  const formMethod = submitter.getAttribute('formMethod')\n  if (formMethod !== null && !isSupportedMethod(formMethod)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`method\\` was set to an unsupported value via \\`formMethod=\"${formMethod}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  // A submitter can override `target` for the form.\n  const formTarget = submitter.getAttribute('formTarget')\n  if (formTarget !== null && !isSupportedTarget(formTarget)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`target\\` was set to an unsupported value via \\`formTarget=\"${formTarget}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  return false\n}\n\nfunction hasReactServerActionAttributes(submitter: HTMLElement) {\n  // https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-client/src/ReactFlightReplyClient.js#L931-L934\n  const name = submitter.getAttribute('name')\n  return (\n    name && (name.startsWith('$ACTION_ID_') || name.startsWith('$ACTION_REF_'))\n  )\n}\n\nfunction hasReactClientActionAttributes(submitter: HTMLElement) {\n  // CSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L482-L487\n  // SSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L2401\n  const action = submitter.getAttribute('formAction')\n  return action && /\\s*javascript:/i.test(action)\n}\n"],"names":["useEffect","useContext","addBasePath","useIntersection","useMergedRef","AppRouterContext","PrefetchKind","RouterContext","DISALLOWED_FORM_PROPS","Form","replace","scroll","prefetch","prefetchProp","ref","externalRef","props","router","useAppOrPagesRouter","actionProp","action","isNavigatingForm","process","env","NODE_ENV","checkActionUrl","undefined","console","error","isAppRouter","key","isPrefetchEnabled","setIntersectionRef","isVisible","rootMargin","disabled","ownRef","prefetchKind","AUTO","kind","err","form","actionHref","onSubmit","event","onFormSubmit","defaultPrevented","formElement","currentTarget","submitter","nativeEvent","hasReactServerActionAttributes","hasUnsupportedSubmitterAttributes","hasReactClientActionAttributes","submitterFormAction","getAttribute","targetUrl","base","window","location","href","URL","Error","cause","searchParams","size","search","formData","FormData","name","value","warn","append","preventDefault","method","targetHref","pagesRouter","appRouter","source","aPropName","testUrl","isSupportedEncType","isSupportedMethod","isSupportedTarget","formEncType","formMethod","formTarget","startsWith","test"],"mappings":"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"}