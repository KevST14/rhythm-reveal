{"version":3,"sources":["../../src/server/load-components.ts"],"sourcesContent":["import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isMetadataRoute } from '../lib/metadata/is-metadata-route'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n/**\n * This manifest prevents removing server rendered <link> tags after client\n * navigation. This is only needed under `Pages dir && Production && Webpack`.\n * @see https://github.com/vercel/next.js/pull/72959\n */\nexport type DynamicCssManifest = string[]\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathname, LoadableManifest>`\n * where pathname is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  dynamicCssManifest?: DeepReadonly<DynamicCssManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n  multiZoneDraftMode?: boolean\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function loadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string,\n  attempts?: number\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath, attempts)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n  isDev,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n  isDev: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // Make sure to avoid loading the manifest for metadata route handlers.\n  const hasClientManifest = isAppPath && !isMetadataRoute(page)\n\n  // In dev mode we retry loading a manifest file to handle a race condition\n  // that can occur while app and pages are compiling at the same time, and the\n  // build-manifest is still being written to disk while an app path is\n  // attempting to load.\n  const manifestLoadAttempts = isDev ? 3 : 1\n\n  // Load the manifest files first\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(\n      join(distDir, BUILD_MANIFEST),\n      manifestLoadAttempts\n    ),\n    loadManifestWithRetries<ReactLoadableManifest>(\n      join(distDir, REACT_LOADABLE_MANIFEST),\n      manifestLoadAttempts\n    ),\n    // This manifest will only exist in Pages dir && Production && Webpack.\n    isAppPath || process.env.TURBOPACK\n      ? undefined\n      : loadManifestWithRetries<DynamicCssManifest>(\n          join(distDir, `${DYNAMIC_CSS_MANIFEST}.json`),\n          manifestLoadAttempts\n        ).catch(() => undefined),\n    hasClientManifest\n      ? loadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_'),\n          manifestLoadAttempts\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json'),\n          manifestLoadAttempts\n        ).catch(() => null)\n      : null,\n  ])\n\n  // Before requiring the actual page module, we have to set the reference\n  // manifests to our global store so Server Action's encryption util can access\n  // to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n"],"names":["BUILD_MANIFEST","REACT_LOADABLE_MANIFEST","CLIENT_REFERENCE_MANIFEST","SERVER_REFERENCE_MANIFEST","DYNAMIC_CSS_MANIFEST","join","requirePage","interopDefault","getTracer","LoadComponentsSpan","evalManifest","loadManifest","wait","setReferenceManifestsSingleton","createServerModuleMap","isMetadataRoute","loadManifestWithRetries","manifestPath","attempts","err","evalManifestWithRetries","loadClientReferenceManifest","entryName","context","__RSC_MANIFEST","undefined","loadComponentsImpl","distDir","page","isAppPath","isDev","DocumentMod","AppMod","Promise","all","hasClientManifest","manifestLoadAttempts","buildManifest","reactLoadableManifest","dynamicCssManifest","clientReferenceManifest","serverActionsManifest","process","env","TURBOPACK","catch","replace","serverModuleMap","ComponentMod","Component","Document","App","getServerSideProps","getStaticProps","getStaticPaths","routeModule","pageConfig","config","loadComponents","wrap"],"mappings":"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"}